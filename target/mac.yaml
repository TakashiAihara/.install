- defaults:
    apt:
      stderr: true
      stdout: true
    link:
      create: true
      force: true
      relink: true
    shell:
      stderr: true
      stdout: true
- shell:
  - command: git submodule update --init --recursive links/.dotfiles
    description: Sync .dotfiles.
  - command: git submodule update --init --recursive links/etc
    description: Sync etc.
  - command: git submodule update --init --recursive links/.ssh
    description: Sync .ssh.
  - command: git submodule update --init --recursive links/rclone
    description: Sync rclone.
- clean:
  - '~'
- create:
  - ~/.config
  - ~/.ssh
  - /etc/fonts
  - /etc/ssh
- link:
    /etc/fonts/local.conf: links/.dotfiles/local.conf
    /etc/ssh/ssh_config: links/etc/ssh/ssh_config
    /etc/ssh/sshd_config: links/etc/ssh/sshd_config
    ~/.config/alacritty: links/.dotfiles/.config/alacritty
    ~/.config/git: links/.dotfiles/.config/git
    ~/.config/nvim: links/.dotfiles/.config/nvim
    ~/.config/rclone: links/rclone
    ~/.config/starship.toml: links/.dotfiles/.config/starship.toml
    ~/.dein: links/.dotfiles/.dein
    ~/.gitconfig: links/.dotfiles/.gitconfig
    ~/.ssh/conf.d: links/.ssh/conf.d
    ~/.ssh/config: links/.ssh/config
    ~/.ssh/keys: links/.ssh/keys
    ~/.tmux.conf: links/.dotfiles/.tmux.conf
    ~/.zsh: links/.dotfiles/.zsh
    ~/.zshrc: links/.dotfiles/.zshrc
- shell:
  - command: '. ./.env && curl -Ss "http://key.aiharahome.site/pubkey?name=${DOTBOT_AREA}"
      | grep "pubkey" | sed -r ''s/^[^:]*: (.*)$/\1/'' | sed -r ''s/"//g'' | tee ~/.ssh/authorized_keys'
    description: Register authorized_key.
- shell:
  - command: ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git" ;
      rm -rf "$(dirname $ZINIT_HOME)" ; mkdir -p "$(dirname $ZINIT_HOME)" ; git clone
      https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
    description: Install zinit.
- shell:
  - command: fc-cache -fv
    description: link fonts.
  - command: curl -fsSL https://starship.rs/install.sh -o /tmp/install.sh ; sh /tmp/install.sh
      --force
    description: Install starship.
  - command: curl -s "https://get.sdkman.io" | bash ; source "$HOME/.sdkman/bin/sdkman-init.sh"
    description: Install sdkman.
  - command: git clone https://github.com/rbenv/rbenv.git ~/.rbenv ; cd ~/.rbenv &&
      src/configure && make -C src
    description: Install rbenv.
  - command: apt-get install -y software-properties-common ; add-apt-repository -y
      ppa:longsleep/golang-backports ; apt update ; sudo apt install -y golang-go
    description: Install latest go.
  - command: curl https://pyenv.run | bash ; export PYENV_ROOT="$HOME/.pyenv" ; command
      -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH" ; eval "$(pyenv init
      -)" ; pyenv install $( pyenv install --list | grep -E -v "[a-zA-Z]" | tail -1
      ) ; pyenv global $( pyenv install --list | grep -E -v "[a-zA-Z]" | tail -1 )
      ; pyenv rehash
    description: Install pyenv.
  - command: curl -sSL https://install.python-poetry.org | python3 -
    description: Install poetry.
  - command: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh
      | bash ; export NVM_DIR="$HOME/.nvm" ; . "$NVM_DIR/nvm.sh" ; . "$NVM_DIR/bash_completion"
      ; nvm install --lts ; curl -fsSL https://get.pnpm.io/install.sh | sh -
    description: Install node.
  - command: git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf ; cd ~/.fzf
      ; yes | ./install
    description: Install fzf.
  - command: curl -sSL https://bit.ly/install-xq | sudo bash
    description: Install xq.
  - command: curl -L https://git.io/dpkg-i-from-url | bash -s -- https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      ; apt --fix-broken install -y ; curl -sS https://raw.githubusercontent.com/TakashiAihara/open_functions/master/get_chromedriver.sh
      | sh
    description: Install chromedriver.
  - command: curl -sSL https://get.docker.com/ | CHANNEL=stable sh ; DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
      ; mkdir -p $DOCKER_CONFIG/cli-plugins ; curl -SL https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-linux-x86_64
      -o $DOCKER_CONFIG/cli-plugins/docker-compose ; chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
    description: Install docker.
  - command: curl -sS https://raw.githubusercontent.com/TakashiAihara/open_functions/master/install_gh.sh
      | sh
    description: Install gh.
  - command: curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh
      | bash
    description: Install zoxide.
  - command: git clone https://github.com/theory/pgenv.git ~/.pgenv
    description: Install pgenv.
  - command: echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt
      cloud-sdk main" | tee /etc/apt/sources.list.d/google-cloud-sdk.list ; curl https://packages.cloud.google.com/apt/doc/apt-key.gpg
      | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - ; apt update
      ; apt install -y google-cloud-cli
    description: Install gcloud.
  - command: curl $( curl https://developer.android.com/studio | xq -x '//a[@data-category="sdk_linux_download"]/@href'
      ) -o /tmp/android_cmdlinetools.zip ; unzip /tmp/android_cmdlinetools.zip -d
      /tmp/ ; export ANDROID_HOME="/usr/local/android" ; export ANDROID_SDK_ROOT="/usr/local/android"
      ; export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin" ; export PATH="$PATH:$ANDROID_HOME/platform-tools"
      ; mkdir -p ${ANDROID_SDK_ROOT}/cmdline-tools/latest ; mv /tmp/cmdline-tools/*
      ${ANDROID_SDK_ROOT}/cmdline-tools/latest ; sdk install java 21.ea.6-open ; yes
      | sdkmanager "build-tools;33.0.1" "platforms;android-33" "platform-tools"
    description: Prepare android.
- go:
  - flags:
    - -v
    - -u
    package:
    - github.com/x-motemen/ghq@latest
    stderr: true
    stdout: true
- brewfile:
    file: settings/Brewfile
