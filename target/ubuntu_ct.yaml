- defaults:
    apt:
      stderr: true
      stdout: true
    link:
      create: true
      force: true
      relink: true
    shell:
      stderr: true
      stdout: true
- shell:
  - command: git submodule update --init --recursive links/.dotfiles
    description: Sync .dotfiles.
  - command: git submodule update --init --recursive links/etc
    description: Sync etc.
- clean:
  - '~'
- link:
    /etc/ssh/ssh_config:
      create: true
      path: links/etc/ssh/ssh_config
      relink: true
    /etc/ssh/sshd_config:
      create: true
      path: links/etc/ssh/sshd_config
      relink: true
    ~/.config/git:
      create: true
      path: links/.dotfiles/.config/git
      relink: true
    ~/.config/nvim:
      create: true
      path: links/.dotfiles/.config/nvim
      relink: true
    ~/.config/starship.toml:
      create: true
      path: links/.dotfiles/.config/starship.toml
      relink: true
    ~/.dein:
      create: true
      path: links/.dotfiles/.dein
      relink: true
    ~/.gitconfig:
      create: true
      path: links/.dotfiles/.gitconfig
      relink: true
    ~/.tmux.conf:
      create: true
      path: links/.dotfiles/.tmux.conf
      relink: true
    ~/.zsh:
      create: true
      path: links/.dotfiles/.zsh
      relink: true
    ~/.zshenv:
      create: true
      path: links/.dotfiles/.zshenv
      relink: true
    ~/.zshrc:
      create: true
      path: links/.dotfiles/.zshrc
      relink: true
- shell:
  - command: mkdir -p /etc/needrestart/conf.d ; echo "\$nrconf{restart} = 'a';" >
      /etc/needrestart/conf.d/50local.conf
    description: Avoid service restart confirm for ubuntu 22.04~.
  - command: sudo apt install -y software-properties-common ; sudo apt remove git
      -y ; sudo apt-add-repository -y ppa:git-core/ppa ; sudo apt update ; sudo apt
      install -y git
    description: Replace git to follow latest with apt.
  - command: sudo apt update ; sudo apt upgrade -y ; sudo apt autoremove -y; sudo
      apt clean
    description: apt update and upgrade.
- apt:
  - autoconf
  - automake
  - bison
  - build-essential
  - bat
  - cmake
  - curl
  - dnsutils
  - ffmpeg
  - g++
  - gcc
  - gettext
  - iputils-ping
  - jq
  - language-pack-ja
  - libbz2-dev
  - libevent-dev
  - libffi-dev
  - liblzma-dev
  - libncurses5-dev
  - libncursesw5-dev
  - libreadline-dev
  - libsqlite3-dev
  - libssl-dev
  - libtool
  - libtool-bin
  - libxml2-utils
  - llvm
  - make
  - neovim
  - ninja-build
  - pkg-config
  - tk-dev
  - tmux
  - ufw
  - unar
  - unzip
  - wget
  - xz-utils
  - zip
  - zlib1g-dev
  - zoxide
  - zsh
  - git-flow
  - graphviz
  - rename
- shell:
  - command: sudo apt install -y language-pack-ja ; sudo locale-gen ja_JP.UTF-8 ;
      sudo update-locale LANG=ja_JP.UTF-8
    description: Update locale.
  - command: sudo sed --in-place -e '/auth.*required.*pam_shells.so/s/required/sufficient/g'
      /etc/pam.d/chsh ; sudo chsh -s `which zsh | head -1` `whoami`
    description: Making zsh the default shell
  - command: ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git" ;
      rm -rf "$(dirname $ZINIT_HOME)" ; mkdir -p "$(dirname $ZINIT_HOME)" ; git clone
      https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
    description: Install zinit.
  - command: curl -s "https://get.sdkman.io" | bash
    description: Install sdkman.
  - command: asdf plugin add ruby ; asdf install ruby latest ; asdf set -u ruby latest
    description: Install ruby via asdf.
  - command: asdf plugin add golang ; asdf install golang latest ; asdf set -u golang
      latest
    description: Install go via asdf.
  - command: asdf plugin add ghq ; asdf install ghq latest ; asdf set -u ghq latest
    description: Install ghq via asdf.
  - command: asdf plugin add python ; asdf install python latest ; asdf set -u python
      latest
    description: Install python via asdf.
  - command: asdf plugin add poetry ; asdf install poetry latest ; asdf set -u poetry
      latest
    description: Install poetry via asdf.
  - command: asdf plugin add nodejs ; asdf install nodejs latest ; asdf set -u nodejs
      latest ; asdf plugin add pnpm ; asdf install pnpm latest ; asdf set -u pnpm
      latest
    description: Install node via asdf.
  - command: asdf plugin add fzf ; asdf install fzf latest ; asdf set -u fzf latest
    description: Install fzf via asdf.
  - command: curl -sSL https://bit.ly/install-xq | sudo bash
    description: Install xq.
  - command: curl -L https://git.io/dpkg-i-from-url | bash -s -- https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      ; sudo apt --fix-broken install -y ; asdf plugin add chromedriver ; asdf install
      chromedriver latest ; asdf set -u chromedriver latest
    description: Install chromedriver via asdf and Chrome browser.
  - command: asdf plugin add github-cli ; asdf install github-cli latest ; asdf set
      -u github-cli latest ; gh extension install maggie-j-liu/gh-star ; gh extension
      install gabe565/gh-profile
    description: Install gh via asdf.
  - command: ufw default deny ; ufw allow from 192.168.0.0/24 ; ufw allow ssh ; ufw
      allow http ; ufw allow https ; ufw logging low ; ufw --force enable ; ufw reload
    description: modify ufw.
  - command: curl -sSL https://get.docker.com | sh
    description: Install docker.
  - command: asdf plugin add zoxide ; asdf install zoxide latest ; asdf set -u zoxide
      latest
    description: Install zoxide via asdf.
  - command: git clone https://github.com/theory/pgenv.git ~/.pgenv
    description: Install pgenv.
  - command: curl $( curl https://developer.android.com/studio | xq -x '//a[@data-category="sdk_linux_download"]/@href'
      ) -o /tmp/android_cmdlinetools.zip ; unzip /tmp/android_cmdlinetools.zip -d
      /tmp/ ; export ANDROID_HOME="/usr/local/android" ; export ANDROID_SDK_ROOT="/usr/local/android"
      ; export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin" ; export PATH="$PATH:$ANDROID_HOME/platform-tools"
      ; rm -rf ${ANDROID_SDK_ROOT}/cmdline-tools/latest ; mkdir -p ${ANDROID_SDK_ROOT}/cmdline-tools/latest
      ; mv /tmp/cmdline-tools/* ${ANDROID_SDK_ROOT}/cmdline-tools/latest ; yes | ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager
      "build-tools;33.0.1" "platforms;android-33" "platform-tools"
    description: Prepare android.
  - command: asdf plugin add act ; asdf install act latest ; asdf set -u act latest
    description: Install Act via asdf.
  - command: asdf plugin add rust ; asdf install rust latest ; asdf set -u rust latest
      ; cargo install cargo-edit cargo-watch
    description: Install rust via asdf.
  - command: asdf plugin add starship ; asdf install starship latest ; asdf set -u
      starship latest
    description: Install starship via asdf.
